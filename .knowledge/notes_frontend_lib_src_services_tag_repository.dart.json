{"is_source_file": true, "format": "Dart", "description": "This file defines a TagRepository class that interacts with a SQLite database to perform CRUD operations on a 'tags' table, ensuring unique tag names and providing methods to retrieve all tags and ensure a set of tags exists.", "external_files": ["package:sqflite/sqflite.dart", "../models/tag.dart", "database_helper.dart"], "external_methods": ["DatabaseHelper.instance", "Database.query", "Database.insert", "Database.batch", "Batch.insert", "Batch.commit", "Tag.fromMap"], "published": ["TagRepository"], "classes": [{"name": "TagRepository", "description": "Repository for tags table, ensuring unique tag names and providing CRUD methods."}], "methods": [{"name": "upsertByName", "description": "Inserts a new tag with the specified name if it does not exist; otherwise, returns the existing tag's ID."}, {"name": "getAll", "description": "Retrieves all tags from the database, ordered by name."}, {"name": "ensureAllExist", "description": "Ensures all tags in the provided list exist in the database; inserts new tags as needed."}], "calls": ["DatabaseHelper.instance", "Database.query", "Database.insert", "Database.batch", "Batch.insert", "Batch.commit", "Tag.fromMap"], "search-terms": ["TagRepository", "notes_frontend", "tag", "repository", "database", "sqflite", "ensureAllExist", "upsertByName"], "state": 2, "file_id": 24, "knowledge_revision": 52, "git_revision": "", "hash": "993909ed9c53c35321d43356bb0f7a12", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/lib/src/services/tag_repository.dart", "revision_history": [{"52": ""}]}